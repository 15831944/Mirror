
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="~/JS/jquery-3.3.1.js"></script>
    @*<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
        <script src="~/JS/vue-resource.js"></script>*@
    <link href="~/JS/dist/css/zui.css" rel="stylesheet" />
    <script src="~/JS/dist/js/zui.js"></script>
    <link href="~/JS/dist/lib/datagrid/zui.datagrid.css" rel="stylesheet" />
    <script src="~/JS/dist/lib/datagrid/zui.datagrid.js"></script>
</head>
<body>
    @*<div id="myDataGrid" class="datagrid" data-ride="myDataGrid"></div>*@
    <div id="myDataGrid" class="datagrid pager">
        <div class="datagrid-container"></div>
        <div class="row bottom-btn-group">
            <div class="col-md-12">   @*这里的12是栅栏格列数,要宽点就调他*@
                <div class="pager" data-max-nav-count="8" data-page="500" data-elements="first_icon,prev_icon,nav,next_icon,last_icon,page_of_total_text,total_text,goto"></div>
                <div class="col-md-6 text-right">

                </div>
                <div class="btn-group">
                    <button type="button" class="btn"><i class="icon icon-upload-alt"></i> 导出数据</button>
                </div>
            </div>

        </div>
    </div>

    @*<div id="app">
            <table>
                <tr>
                    <td>电影名</td>
                </tr>
                <tr>
                    <td>
                        {{message}}
                    </td>
                </tr>
            </table>


        </div>*@
    <script>


        $(function () {
            console.log("dfd");
        });

        $('#myDataGrid').datagrid({
            dataSource: {
                cols: [
                    { name: 'time', label: '时间', width: 132 },
                    { name: 'hera', label: '英雄', width: 134 },
                    { name: 'action', label: '动作', width: 109 },
                    { name: 'target', label: '目标', width: 109 },
                    { name: 'desc', label: '描述', width: 287 }
                ],
                    remote: function (param) {
                    return {
                        // 原创请求地址
                        url: '/Movie/LoadMovies',
                        // 请求类型
                        type: 'POST',
                        // 数据类型
                        dataType: 'json',
                        //查询条件
                        data: {}
                    }
                },
            },
            // ... 其他初始化选项
        });

     

        //var vm = new Vue({
        //    el: '#app',
        //    data: {
        //        searchdata: searchdata,
        //        message: "Aaron!",
        //        movieData: []
        //    },
        //    methods: {
        //        FTest: function (ele) {
        //            var $ele = $(ele.target);  //获取当前点击对象
        //            var input = $ele.prev();
        //            alert(input.val());
        //        },
        //        LoadData: function () {
        //              //这个this 被vue接管了,而且data好像也要_data才行  如果this要用jq的  要写成 $event
        //            this.$http.post('/Movie/LoadMovies', { search: this.searchdata }).
        //                then(function (res) {
        //                    var resmessage = res.body;
        //                    var obj = JSON.parse(resmessage);
        //                    this.movieData = obj.Msg;
        //                }).catch(function (error) {
        //                    console.log(error);
        //                });
        //        }
        //    }
        //    //这个template如果使用,会把元素中的东西都替换掉 ,但是可以用来做模板绑定  用单独的一个js管理
        //    //template: '<h1>Hello,Vue.js 2{{message}}</h1>'
        //})

    </script>

</body>
</html>
